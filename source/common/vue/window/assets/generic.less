/**
 * @ignore
 * BEGIN HEADER
 *
 * Contains:        Generic CSS
 * CVM-Role:        CSS
 * Maintainer:      Hendrik Erz
 * License:         GNU GPL v3
 *
 * Description:     This file contains generic CSS for all platforms. NOTE:
 *                  This is likely going to fall prey to a refactor.
 *
 * END HEADER
 */

#app {
  height: 100%;
}

// Generic styles that apply to all platforms
body {
  label {
    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  }

  .form-control {
    margin: 4px 0px;
    break-inside: avoid;

    // Full width styles
    input:not(.inline),
    select:not(.inline),
    textarea:not(.inline) {
      width: 100%;
      display: block;
    }

    // Add some margin to inline elements
    input.inline, select.inline {
      margin: 0 5px;
    }
  }

  // Shows an input and a button side by side
  .input-button-group {
    display: flex;
    input {
      flex: 9;
      margin-right: 4px;
    }

    button {
      flex: 1;
    }
  }
}

body.darwin {
  fieldset {
    border: none;
    border-bottom: 1px solid rgb(210, 210, 210);

    &:last-child {
      border-bottom: none;
    }
  }

  // Generic inputs
  input, select, textarea, button {
    font-family:  -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
    font-size: 13px;
    min-width: 50px;
    background-color: white;
    border: 1px solid rgb(210, 210, 210);
    border-bottom-color: rgb(180, 180, 180);
    border-radius: 6px;
    padding: 2px 4px;
  }

  input[disabled] {
    background-color: #ebebeb;
  }

  &.dark {
    // Generic inputs
    input, select, textarea, button {
      color: rgb(215, 215, 215);
      border-color: transparent;
      background-color: rgb(85, 85, 85);
      border-top-color: rgb(100, 100, 100);
    }

    fieldset {
      border-bottom-color: rgb(50, 50, 50);
    }
  }
}

body.win32 {
  fieldset {
    border: none;
  }

  // Generic inputs
  input, select, textarea, button {
    background-color: white;
    border: 2px solid rgb(90, 90, 90);
    border-radius: 0px;
    min-width: 50px;
    padding: 8px 8px;
  }

  &.dark {
    input, select, textarea, button {
      background-color: rgb(90, 90, 90);
      color: white;
      border-color: rgb(120, 120, 120);
    }
  }
}

body.linux {
  fieldset {
    border: none;
  }

  input, select, textarea, button {
    border-radius: 4px;
    padding: 4px;
    min-width: 50px;
    border: 1px solid rgb(180, 180, 180);
  }

  &.dark {
    input, select, textarea, button {
      color: white;
      border-color: rgb(120, 120, 120);
    }
  }

  --button-radius: 6px;
  
  input[type="button"], button {
    box-sizing: content-box;

    min-height: 24px;
    min-width: 16px;
    padding: 4px 10px;

    border: none;
    border-radius: var(--button-radius);

    background-color: var(--button-color);

    &:hover {
      background-color: var(--view-hover-color);
    }

    &.active {
      background-color: var(--view-selected-color);

      &:hover {
        background-color: var(--view-selected-hover-color);
      }
    }
  }

  select, input[type="time"], input[type="number"], input[type="text"], input[type="search"] {
    border: none;
    border-radius: var(--button-radius);
    padding: 5px 9px;
    min-height: 34px;
    background-color: var(--button-color);
    color: var(--view-fg-color);
    caret-color: currentColor;
    transition:
      outline-color 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94),
      outline-width 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94),
      outline-offset 200ms cubic-bezier(0.25, 0.46, 0.45, 0.94);
    outline: 0 solid transparent;
    outline-offset: 4px;

    &::placeholder {
      opacity: 0.55; /* dim label */
      color: inherit;
    }

    &:focus-within {
      outline-offset: -2px;
      outline-width: 2px;
      outline-color: rgb(var(--accent-color-rgb) / 50%);
    }
  }
}

body zettlr-separator {
  box-sizing: content-box;
  flex-basis: 1px;
  background-clip: content-box;
  position: relative;
  background-color: rgb(213, 213, 213);

  z-index: 1;
  transition: background-color 0.5s ease;

  &:hover, &[active] {
    background-color: rgb(128, 128, 128, .5);
  }
}

body zettlr-splitter zettlr-separator {
  padding: 0 5px;
  margin: 0 -5px;
  cursor: col-resize;
}

body zettlr-splitter:where([data-direction="column"], [data-direction="column-reverse"]) > zettlr-separator {
  padding: 5px 0;
  margin: -5px 0;
  cursor: row-resize;
}

body.dark zettlr-separator {
  background-color: rgb(80, 80, 80);
}

body.linux {
  zettlr-separator {
    background-color: var(--headerbar-shade-color);

    &:hover, &[active] {
      background-color: var(--border-color);
    }
  }
}
